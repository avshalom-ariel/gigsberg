{"ast":null,"code":"var _jsxFileName = \"/home/avshalom/GitHub/Gigsberg/GigsbergFrontend/src/pages/ProductsPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n//\n// const ProductsPage = () => {\n//     // State for storing products, pagination, and form inputs\n//     const [products, setProducts] = useState([]);\n//     const [newProduct, setNewProduct] = useState({ name: '', price: '' });\n//     const [editProduct, setEditProduct] = useState({ id: '', name: '', price: '' });\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [totalPages, setTotalPages] = useState(1);\n//     const [loading, setLoading] = useState(false);\n//\n//     // Fetch products with pagination\n//     const fetchProducts = async (page = 1) => {\n//         setLoading(true);\n//         try {\n//             const response = await axios.get(`http://localhost:3003/api/products?page=${page}`, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             setProducts(response.data.products);\n//             setTotalPages(response.data.totalPages);\n//             setCurrentPage(page);\n//         } catch (error) {\n//             console.error('Error fetching products', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n//\n//     // Handle the create product\n//     const handleCreateProduct = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:3003/api/products', newProduct, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             setNewProduct({ name: '', price: '' });\n//             fetchProducts(currentPage); // Refresh the product list\n//         } catch (error) {\n//             console.error('Error creating product', error);\n//         }\n//     };\n//\n//     // Handle the update product\n//     const handleUpdateProduct = async (e) => {\n//         e.preventDefault();\n//         try {\n//             await axios.put(`http://localhost:3003/api/products/${editProduct.id}`, {\n//                 name: editProduct.name,\n//                 price: editProduct.price,\n//             }, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             setEditProduct({ id: '', name: '', price: '' });\n//             fetchProducts(currentPage); // Refresh the product list\n//         } catch (error) {\n//             console.error('Error updating product', error);\n//         }\n//     };\n//\n//     // Handle delete product\n//     const handleDeleteProduct = async (id) => {\n//         try {\n//             console.log(id);\n//             await axios.delete(`http://localhost:3003/api/products/${id}`, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             fetchProducts(currentPage); // Refresh the product list\n//         } catch (error) {\n//             console.error('Error deleting product', error);\n//         }\n//     };\n//\n//     // Handle input change for create and update forms\n//     const handleInputChange = (e, type) => {\n//         const { name, value } = e.target;\n//         if (type === 'create') {\n//             setNewProduct({ ...newProduct, [name]: value });\n//         } else if (type === 'edit') {\n//             setEditProduct({ ...editProduct, [name]: value });\n//         }\n//     };\n//\n//     // Handle page change for pagination\n//     const handlePageChange = (page) => {\n//         fetchProducts(page);\n//     };\n//\n//     useEffect(() => {\n//         fetchProducts(currentPage);\n//     }, [currentPage]);\n//\n//     return (\n//         <div className=\"container\">\n//             <h1>Products Management</h1>\n//\n//             {/* Create Product Form */}\n//             <div className=\"form-container\">\n//                 <h2>Create New Product</h2>\n//                 <form onSubmit={handleCreateProduct}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"name\">Product Name</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"name\"\n//                             name=\"name\"\n//                             value={newProduct.name}\n//                             onChange={(e) => handleInputChange(e, 'create')}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"price\">Price</label>\n//                         <input\n//                             type=\"number\"\n//                             id=\"price\"\n//                             name=\"price\"\n//                             value={newProduct.price}\n//                             onChange={(e) => handleInputChange(e, 'create')}\n//                             required\n//                         />\n//                     </div>\n//                     <button type=\"submit\" className=\"cta-button primary\">Create Product</button>\n//                 </form>\n//             </div>\n//\n//             {/* Edit Product Form */}\n//             {editProduct.id && (\n//                 <div className=\"form-container\">\n//                     <h2>Edit Product</h2>\n//                     <form onSubmit={handleUpdateProduct}>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"edit-name\">Product Name</label>\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"edit-name\"\n//                                 name=\"name\"\n//                                 value={editProduct.name}\n//                                 onChange={(e) => handleInputChange(e, 'edit')}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"edit-price\">Price</label>\n//                             <input\n//                                 type=\"number\"\n//                                 id=\"edit-price\"\n//                                 name=\"price\"\n//                                 value={editProduct.price}\n//                                 onChange={(e) => handleInputChange(e, 'edit')}\n//                                 required\n//                             />\n//                         </div>\n//                         <button type=\"submit\" className=\"cta-button primary\">Update Product</button>\n//                     </form>\n//                 </div>\n//             )}\n//\n//             {/* Products Table */}\n//             <div className=\"products-table\">\n//                 <h2>Product List</h2>\n//                 {loading ? (\n//                     <p>Loading products...</p>\n//                 ) : (\n//                     <table>\n//                         <thead>\n//                         <tr>\n//                             <th>Product Name</th>\n//                             <th>Price</th>\n//                             <th>Actions</th>\n//                         </tr>\n//                         </thead>\n//                         <tbody>\n//                         {products.map((product) => (\n//                             <tr key={product._id}>\n//                                 <td>{product.name}</td>\n//                                 <td>{product.price}</td>\n//                                 <td>\n//                                     <button onClick={() => setEditProduct(product)} className=\"cta-button secondary\">Edit</button>\n//                                     <button onClick={() => handleDeleteProduct(product.id)} className=\"cta-button delete\">Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                         </tbody>\n//                     </table>\n//                 )}\n//             </div>\n//\n//             {/* Pagination */}\n//             <div className=\"pagination\">\n//                 <button\n//                     onClick={() => handlePageChange(currentPage - 1)}\n//                     disabled={currentPage === 1}\n//                 >\n//                     Previous\n//                 </button>\n//                 <span>Page {currentPage} of {totalPages}</span>\n//                 <button\n//                     onClick={() => handlePageChange(currentPage + 1)}\n//                     disabled={currentPage === totalPages}\n//                 >\n//                     Next\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default ProductsPage;\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsPage = () => {\n  _s();\n  // State for storing products, pagination, and form inputs\n  const [products, setProducts] = useState([]);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: ''\n  });\n  const [editProduct, setEditProduct] = useState({\n    id: '',\n    name: '',\n    price: ''\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState({\n    id: '',\n    name: '',\n    price: '',\n    description: ''\n  });\n  const [searchedProducts, setSearchedProducts] = useState([]);\n\n  // Fetch products with pagination and optional search filters\n  const fetchProducts = async (page = 1, searchParams = {}) => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:3003/api/products`, {\n        params: {\n          page,\n          ...searchParams\n        },\n        headers: {\n          \"Authorization\": `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setProducts(response.data.products);\n      setTotalPages(response.data.totalPages);\n      setCurrentPage(page);\n    } catch (error) {\n      console.error('Error fetching products', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle the create product\n  const handleCreateProduct = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3003/api/products', newProduct, {\n        headers: {\n          \"Authorization\": `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setNewProduct({\n        name: '',\n        price: ''\n      });\n      fetchProducts(currentPage); // Refresh the product list\n    } catch (error) {\n      console.error('Error creating product', error);\n    }\n  };\n\n  // Handle the update product\n  const handleUpdateProduct = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put(`http://localhost:3003/api/products/${editProduct.id}`, {\n        name: editProduct.name,\n        price: editProduct.price\n      }, {\n        headers: {\n          \"Authorization\": `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      setEditProduct({\n        id: '',\n        name: '',\n        price: ''\n      });\n      fetchProducts(currentPage); // Refresh the product list\n    } catch (error) {\n      console.error('Error updating product', error);\n    }\n  };\n\n  // Handle delete product\n  const handleDeleteProduct = async id => {\n    try {\n      console.log(id);\n      const response = await axios.delete(`http://localhost:3003/api/products/${id}`, {\n        headers: {\n          \"Authorization\": `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      fetchProducts(currentPage); // Refresh the product list\n    } catch (error) {\n      console.error('Error deleting product', error);\n    }\n  };\n\n  // Handle input change for create and update forms\n  const handleInputChange = (e, type) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (type === 'create') {\n      setNewProduct({\n        ...newProduct,\n        [name]: value\n      });\n    } else if (type === 'edit') {\n      setEditProduct({\n        ...editProduct,\n        [name]: value\n      });\n    } else if (type === 'search') {\n      setSearch({\n        ...search,\n        [name]: value\n      });\n    }\n  };\n\n  // Handle page change for pagination\n  const handlePageChange = page => {\n    fetchProducts(page, search);\n  };\n\n  // Handle search submit\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    handleSearchProduct(search);\n    // fetchProducts(1, search); // Reset to page 1 with search filters\n  };\n\n  // Handle Search product\n  const handleSearchProduct = async search => {\n    try {\n      console.log(\"sending search: \" + search);\n      const response = await axios.get(`http://localhost:3003/api/products/search`, {\n        params: {\n          id: search.id,\n          name: search.name,\n          price: search.price,\n          description: search.description\n        },\n        headers: {\n          \"Authorization\": `Bearer ${sessionStorage.getItem('token')}`\n        }\n      });\n      console.log(response);\n      if (response.status >= 200 && response.status < 300) {\n        console.log(\"Search found\");\n        console.log(response);\n        setSearchedProducts(response.data.products);\n      } else {\n        console.log(\"Search failed\");\n      }\n    } catch (error) {\n      console.error('Error deleting product', error);\n    }\n  };\n  useEffect(() => {\n    fetchProducts(currentPage, search);\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearchSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-id\",\n            children: \"Product ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search-id\",\n            name: \"id\",\n            value: search.id,\n            onChange: e => handleInputChange(e, 'search')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-name\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search-name\",\n            name: \"name\",\n            value: search.name,\n            onChange: e => handleInputChange(e, 'search')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"search-price\",\n            name: \"price\",\n            value: search.price,\n            onChange: e => handleInputChange(e, 'search')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"search-description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search-description\",\n            name: \"description\",\n            value: search.description,\n            onChange: e => handleInputChange(e, 'search')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cta-button primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateProduct,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: newProduct.name,\n            onChange: e => handleInputChange(e, 'create'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            name: \"price\",\n            value: newProduct.price,\n            onChange: e => handleInputChange(e, 'create'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cta-button primary\",\n          children: \"Create Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this), editProduct.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUpdateProduct,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"edit-name\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"edit-name\",\n            name: \"name\",\n            value: editProduct.name,\n            onChange: e => handleInputChange(e, 'edit'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"edit-price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"edit-price\",\n            name: \"price\",\n            value: editProduct.price,\n            onChange: e => handleInputChange(e, 'edit'),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"cta-button primary\",\n          children: \"Update Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading products...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: searchedProducts.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditProduct(product),\n                className: \"cta-button secondary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteProduct(product.id),\n                className: \"cta-button delete\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 33\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Product List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading products...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditProduct(product),\n                className: \"cta-button secondary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteProduct(product.id),\n                className: \"cta-button delete\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 33\n            }, this)]\n          }, product._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage, \" of \", totalPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductsPage, \"GUyl1PeEXKCaE3svr9FhFvYOAlw=\");\n_c = ProductsPage;\nexport default ProductsPage;\nvar _c;\n$RefreshReg$(_c, \"ProductsPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ProductsPage","_s","products","setProducts","newProduct","setNewProduct","name","price","editProduct","setEditProduct","id","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","search","setSearch","description","searchedProducts","setSearchedProducts","fetchProducts","page","searchParams","response","get","params","headers","sessionStorage","getItem","data","error","console","handleCreateProduct","e","preventDefault","post","handleUpdateProduct","put","handleDeleteProduct","log","delete","handleInputChange","type","value","target","handlePageChange","handleSearchSubmit","handleSearchProduct","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","required","map","product","onClick","_id","disabled","_c","$RefreshReg$"],"sources":["/home/avshalom/GitHub/Gigsberg/GigsbergFrontend/src/pages/ProductsPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n//\n// const ProductsPage = () => {\n//     // State for storing products, pagination, and form inputs\n//     const [products, setProducts] = useState([]);\n//     const [newProduct, setNewProduct] = useState({ name: '', price: '' });\n//     const [editProduct, setEditProduct] = useState({ id: '', name: '', price: '' });\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [totalPages, setTotalPages] = useState(1);\n//     const [loading, setLoading] = useState(false);\n//\n//     // Fetch products with pagination\n//     const fetchProducts = async (page = 1) => {\n//         setLoading(true);\n//         try {\n//             const response = await axios.get(`http://localhost:3003/api/products?page=${page}`, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             setProducts(response.data.products);\n//             setTotalPages(response.data.totalPages);\n//             setCurrentPage(page);\n//         } catch (error) {\n//             console.error('Error fetching products', error);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n//\n//     // Handle the create product\n//     const handleCreateProduct = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const response = await axios.post('http://localhost:3003/api/products', newProduct, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             setNewProduct({ name: '', price: '' });\n//             fetchProducts(currentPage); // Refresh the product list\n//         } catch (error) {\n//             console.error('Error creating product', error);\n//         }\n//     };\n//\n//     // Handle the update product\n//     const handleUpdateProduct = async (e) => {\n//         e.preventDefault();\n//         try {\n//             await axios.put(`http://localhost:3003/api/products/${editProduct.id}`, {\n//                 name: editProduct.name,\n//                 price: editProduct.price,\n//             }, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             setEditProduct({ id: '', name: '', price: '' });\n//             fetchProducts(currentPage); // Refresh the product list\n//         } catch (error) {\n//             console.error('Error updating product', error);\n//         }\n//     };\n//\n//     // Handle delete product\n//     const handleDeleteProduct = async (id) => {\n//         try {\n//             console.log(id);\n//             await axios.delete(`http://localhost:3003/api/products/${id}`, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n//             fetchProducts(currentPage); // Refresh the product list\n//         } catch (error) {\n//             console.error('Error deleting product', error);\n//         }\n//     };\n//\n//     // Handle input change for create and update forms\n//     const handleInputChange = (e, type) => {\n//         const { name, value } = e.target;\n//         if (type === 'create') {\n//             setNewProduct({ ...newProduct, [name]: value });\n//         } else if (type === 'edit') {\n//             setEditProduct({ ...editProduct, [name]: value });\n//         }\n//     };\n//\n//     // Handle page change for pagination\n//     const handlePageChange = (page) => {\n//         fetchProducts(page);\n//     };\n//\n//     useEffect(() => {\n//         fetchProducts(currentPage);\n//     }, [currentPage]);\n//\n//     return (\n//         <div className=\"container\">\n//             <h1>Products Management</h1>\n//\n//             {/* Create Product Form */}\n//             <div className=\"form-container\">\n//                 <h2>Create New Product</h2>\n//                 <form onSubmit={handleCreateProduct}>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"name\">Product Name</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"name\"\n//                             name=\"name\"\n//                             value={newProduct.name}\n//                             onChange={(e) => handleInputChange(e, 'create')}\n//                             required\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label htmlFor=\"price\">Price</label>\n//                         <input\n//                             type=\"number\"\n//                             id=\"price\"\n//                             name=\"price\"\n//                             value={newProduct.price}\n//                             onChange={(e) => handleInputChange(e, 'create')}\n//                             required\n//                         />\n//                     </div>\n//                     <button type=\"submit\" className=\"cta-button primary\">Create Product</button>\n//                 </form>\n//             </div>\n//\n//             {/* Edit Product Form */}\n//             {editProduct.id && (\n//                 <div className=\"form-container\">\n//                     <h2>Edit Product</h2>\n//                     <form onSubmit={handleUpdateProduct}>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"edit-name\">Product Name</label>\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"edit-name\"\n//                                 name=\"name\"\n//                                 value={editProduct.name}\n//                                 onChange={(e) => handleInputChange(e, 'edit')}\n//                                 required\n//                             />\n//                         </div>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"edit-price\">Price</label>\n//                             <input\n//                                 type=\"number\"\n//                                 id=\"edit-price\"\n//                                 name=\"price\"\n//                                 value={editProduct.price}\n//                                 onChange={(e) => handleInputChange(e, 'edit')}\n//                                 required\n//                             />\n//                         </div>\n//                         <button type=\"submit\" className=\"cta-button primary\">Update Product</button>\n//                     </form>\n//                 </div>\n//             )}\n//\n//             {/* Products Table */}\n//             <div className=\"products-table\">\n//                 <h2>Product List</h2>\n//                 {loading ? (\n//                     <p>Loading products...</p>\n//                 ) : (\n//                     <table>\n//                         <thead>\n//                         <tr>\n//                             <th>Product Name</th>\n//                             <th>Price</th>\n//                             <th>Actions</th>\n//                         </tr>\n//                         </thead>\n//                         <tbody>\n//                         {products.map((product) => (\n//                             <tr key={product._id}>\n//                                 <td>{product.name}</td>\n//                                 <td>{product.price}</td>\n//                                 <td>\n//                                     <button onClick={() => setEditProduct(product)} className=\"cta-button secondary\">Edit</button>\n//                                     <button onClick={() => handleDeleteProduct(product.id)} className=\"cta-button delete\">Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                         </tbody>\n//                     </table>\n//                 )}\n//             </div>\n//\n//             {/* Pagination */}\n//             <div className=\"pagination\">\n//                 <button\n//                     onClick={() => handlePageChange(currentPage - 1)}\n//                     disabled={currentPage === 1}\n//                 >\n//                     Previous\n//                 </button>\n//                 <span>Page {currentPage} of {totalPages}</span>\n//                 <button\n//                     onClick={() => handlePageChange(currentPage + 1)}\n//                     disabled={currentPage === totalPages}\n//                 >\n//                     Next\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default ProductsPage;\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ProductsPage = () => {\n    // State for storing products, pagination, and form inputs\n    const [products, setProducts] = useState([]);\n    const [newProduct, setNewProduct] = useState({ name: '', price: '' });\n    const [editProduct, setEditProduct] = useState({ id: '', name: '', price: '' });\n    const [currentPage, setCurrentPage] = useState(1);\n    const [totalPages, setTotalPages] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState({ id: '', name: '', price: '', description: '' });\n    const [searchedProducts, setSearchedProducts] = useState([]);\n\n    // Fetch products with pagination and optional search filters\n    const fetchProducts = async (page = 1, searchParams = {}) => {\n        setLoading(true);\n        try {\n            const response = await axios.get(`http://localhost:3003/api/products`, {\n                params: {\n                    page,\n                    ...searchParams\n                },\n                headers: { \"Authorization\" : `Bearer ${sessionStorage.getItem('token')}` }\n            });\n            setProducts(response.data.products);\n            setTotalPages(response.data.totalPages);\n            setCurrentPage(page);\n        } catch (error) {\n            console.error('Error fetching products', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Handle the create product\n    const handleCreateProduct = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:3003/api/products', newProduct, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n            setNewProduct({ name: '', price: '' });\n            fetchProducts(currentPage); // Refresh the product list\n        } catch (error) {\n            console.error('Error creating product', error);\n        }\n    };\n\n    // Handle the update product\n    const handleUpdateProduct = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.put(`http://localhost:3003/api/products/${editProduct.id}`, {\n                name: editProduct.name,\n                price: editProduct.price,\n            }, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n            setEditProduct({ id: '', name: '', price: '' });\n            fetchProducts(currentPage); // Refresh the product list\n        } catch (error) {\n            console.error('Error updating product', error);\n        }\n    };\n\n    // Handle delete product\n    const handleDeleteProduct = async (id) => {\n        try {\n            console.log(id);\n            const response = await axios.delete(`http://localhost:3003/api/products/${id}`, { headers: {\"Authorization\" : `Bearer ${sessionStorage.getItem('token')}`} });\n            fetchProducts(currentPage); // Refresh the product list\n        } catch (error) {\n            console.error('Error deleting product', error);\n        }\n    };\n\n    // Handle input change for create and update forms\n    const handleInputChange = (e, type) => {\n        const { name, value } = e.target;\n        if (type === 'create') {\n            setNewProduct({ ...newProduct, [name]: value });\n        } else if (type === 'edit') {\n            setEditProduct({ ...editProduct, [name]: value });\n        } else if (type === 'search') {\n            setSearch({ ...search, [name]: value });\n        }\n    };\n\n    // Handle page change for pagination\n    const handlePageChange = (page) => {\n        fetchProducts(page, search);\n    };\n\n    // Handle search submit\n    const handleSearchSubmit = (e) => {\n        e.preventDefault();\n        handleSearchProduct(search)\n        // fetchProducts(1, search); // Reset to page 1 with search filters\n    };\n\n    // Handle Search product\n    const handleSearchProduct = async (search) => {\n        try {\n            console.log(\"sending search: \" + search);\n            const response = await axios.get(`http://localhost:3003/api/products/search`, {\n                params: {\n                    id: search.id,\n                    name: search.name,\n                    price: search.price,\n                    description: search.description\n                },\n                headers: { \"Authorization\" : `Bearer ${sessionStorage.getItem('token')}` }\n            });\n\n            console.log(response);\n\n            if (response.status >= 200 && response.status < 300) {\n                console.log(\"Search found\");\n                console.log(response);\n                setSearchedProducts(response.data.products);\n            } else {\n                console.log(\"Search failed\");\n            }\n        } catch (error) {\n            console.error('Error deleting product', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchProducts(currentPage, search);\n    }, [currentPage]);\n\n    return (\n        <div className=\"container\">\n            <h1>Products Management</h1>\n\n            {/* Search Form */}\n            <div className=\"form-container\">\n                <h2>Search Products</h2>\n                <form onSubmit={handleSearchSubmit}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"search-id\">Product ID</label>\n                        <input\n                            type=\"text\"\n                            id=\"search-id\"\n                            name=\"id\"\n                            value={search.id}\n                            onChange={(e) => handleInputChange(e, 'search')}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"search-name\">Product Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"search-name\"\n                            name=\"name\"\n                            value={search.name}\n                            onChange={(e) => handleInputChange(e, 'search')}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"search-price\">Price</label>\n                        <input\n                            type=\"number\"\n                            id=\"search-price\"\n                            name=\"price\"\n                            value={search.price}\n                            onChange={(e) => handleInputChange(e, 'search')}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"search-description\">Description</label>\n                        <input\n                            type=\"text\"\n                            id=\"search-description\"\n                            name=\"description\"\n                            value={search.description}\n                            onChange={(e) => handleInputChange(e, 'search')}\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"cta-button primary\">Search</button>\n                </form>\n            </div>\n\n            {/* Create Product Form */}\n            <div className=\"form-container\">\n                <h2>Create New Product</h2>\n                <form onSubmit={handleCreateProduct}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Product Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            value={newProduct.name}\n                            onChange={(e) => handleInputChange(e, 'create')}\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"price\">Price</label>\n                        <input\n                            type=\"number\"\n                            id=\"price\"\n                            name=\"price\"\n                            value={newProduct.price}\n                            onChange={(e) => handleInputChange(e, 'create')}\n                            required\n                        />\n                    </div>\n                    <button type=\"submit\" className=\"cta-button primary\">Create Product</button>\n                </form>\n            </div>\n\n            {/* Edit Product Form */}\n            {editProduct.id && (\n                <div className=\"form-container\">\n                    <h2>Edit Product</h2>\n                    <form onSubmit={handleUpdateProduct}>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"edit-name\">Product Name</label>\n                            <input\n                                type=\"text\"\n                                id=\"edit-name\"\n                                name=\"name\"\n                                value={editProduct.name}\n                                onChange={(e) => handleInputChange(e, 'edit')}\n                                required\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"edit-price\">Price</label>\n                            <input\n                                type=\"number\"\n                                id=\"edit-price\"\n                                name=\"price\"\n                                value={editProduct.price}\n                                onChange={(e) => handleInputChange(e, 'edit')}\n                                required\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"cta-button primary\">Update Product</button>\n                    </form>\n                </div>\n            )}\n            {/* Searched Products Table */}\n            <div className=\"products-table\">\n                <h2>Product List</h2>\n                {loading ? (\n                    <p>Loading products...</p>\n                ) : (\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Product Name</th>\n                            <th>Price</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {searchedProducts.map((product) => (\n                            <tr key={product._id}>\n                                <td>{product.name}</td>\n                                <td>{product.price}</td>\n                                <td>\n                                    <button onClick={() => setEditProduct(product)} className=\"cta-button secondary\">Edit</button>\n                                    <button onClick={() => handleDeleteProduct(product.id)} className=\"cta-button delete\">Delete</button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n\n            {/* Products Table */}\n            <div className=\"products-table\">\n                <h2>Product List</h2>\n                {loading ? (\n                    <p>Loading products...</p>\n                ) : (\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Product Name</th>\n                            <th>Price</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {products.map((product) => (\n                            <tr key={product._id}>\n                                <td>{product.name}</td>\n                                <td>{product.price}</td>\n                                <td>\n                                    <button onClick={() => setEditProduct(product)} className=\"cta-button secondary\">Edit</button>\n                                    <button onClick={() => handleDeleteProduct(product.id)} className=\"cta-button delete\">Delete</button>\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                )}\n            </div>\n\n            {/* Pagination */}\n            <div className=\"pagination\">\n                <button\n                    onClick={() => handlePageChange(currentPage - 1)}\n                    disabled={currentPage === 1}\n                >\n                    Previous\n                </button>\n                <span>Page {currentPage} of {totalPages}</span>\n                <button\n                    onClick={() => handlePageChange(currentPage + 1)}\n                    disabled={currentPage === totalPages}\n                >\n                    Next\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductsPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}