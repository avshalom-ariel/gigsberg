{"ast":null,"code":"var _jsxFileName = \"/home/avshalom/GitHub/Gigsberg/GigsbergFrontend/src/pages/BasePage.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import React, { useState } from 'react';\n// import '../styles/styles.css'; // Import the CSS file\n// import NavBar from '../components/NavBar'; // Import the Header component\n// import axios from 'axios';\n//\n// const LoginForm = ({ onSubmit, setShowForm }) => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         onSubmit(email, password);\n//     };\n//\n//     return (\n//         <div className=\"form-container\">\n//             <h2>Login</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email</label>\n//                     <input\n//                         type=\"email\"\n//                         id=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         placeholder=\"Enter your email\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Password</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         placeholder=\"Enter your password\"\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\" className=\"cta-button primary\">Login</button>\n//             </form>\n//\n//             {/* Button to toggle to Register form */}\n//             <div className=\"toggle-form\">\n//                 <p>Don't have an account? <button onClick={() => setShowForm('register')} className=\"toggle-button\">Register</button></p>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// const RegisterForm = ({ onSubmit, setShowForm }) => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [name, setName] = useState('');\n//\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         if (password !== confirmPassword) {\n//             alert(\"Passwords do not match!\");\n//             return;\n//         }\n//         onSubmit(email, password, name);\n//     };\n//\n//     return (\n//         <div className=\"form-container\">\n//             <h2>Register</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email</label>\n//                     <input\n//                         type=\"email\"\n//                         id=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         placeholder=\"Enter your email\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Password</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         placeholder=\"Enter your password\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"confirm-password\">Confirm Password</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"confirm-password\"\n//                         value={confirmPassword}\n//                         onChange={(e) => setConfirmPassword(e.target.value)}\n//                         placeholder=\"Confirm your password\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"name\">Name</label>\n//                     <input\n//                         type=\"name\"\n//                         id=\"name\"\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         placeholder=\"Enter your name\"\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\" className=\"cta-button primary\">Register</button>\n//             </form>\n//\n//             {/* Button to toggle to Login form */}\n//             <div className=\"toggle-form\">\n//                 <p>Already have an account? <button onClick={() => setShowForm('login')}\n//                                                     className=\"toggle-button\">Login</button></p>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// const BasePage = () => {\n//     const [showForm, setShowForm] = useState(null); // null, \"login\", or \"register\"\n//     const [message, setMessage] = useState('');\n//     const [error, setError] = useState('');\n//\n//     const handleLoginSubmit = async (email, password) => {\n//         console.log('Logging in with:', email, password);\n//         try {\n//             const response = await axios.post('http://localhost:3003/api/users/login', {\n//                 email: email,\n//                 password: password\n//             });\n//\n//             if (response.status >= 300 || response.status < 200) {\n//                 setError(\"Login failed, try again.\");\n//             } else {\n//                 sessionStorage.setItem('token', response.data.token);\n//                 setMessage(\"Logged in successfully.\");\n//             }\n//         } catch (error) {\n//             setError(error);\n//         }\n//\n//     };\n//\n//     const handleRegisterSubmit = async (email, password, name) => {\n//         console.log('Registering with:', email, password);\n//         try {\n//             const response = await axios.post('http://localhost:3003/api/users/register', {\n//                 name: name,\n//                 email: email,\n//                 password: password\n//             });\n//\n//             if (response.status >= 300 || response.status < 200) {\n//                 setError(\"Register failed, try again.\");\n//             } else {\n//                 sessionStorage.setItem('token', response.data.token);\n//                 setMessage(\"Registered successfully.\");\n//             }\n//         } catch(error) {\n//             setError(error);\n//         }\n//     };\n//\n//     return (\n//         <div>\n//             <NavBar></NavBar>\n//             <div className=\"container\">\n//                 {/*<NavBar/>*/}\n//                 <div className=\"hero-section\">\n//                     <h1 className=\"hero-heading\">Welcome to My Products Manager Project</h1>\n//                 </div>\n//\n//                 {/* Call-to-Action Buttons */}\n//                 {showForm === null && (\n//                     <div className=\"cta-buttons\">\n//                         <button\n//                             className=\"cta-button primary\"\n//                             onClick={() => setShowForm('login')}\n//                         >\n//                             Login\n//                         </button>\n//                         <button\n//                             className=\"cta-button secondary\"\n//                             onClick={() => setShowForm('register')}\n//                         >\n//                             Register\n//                         </button>\n//                     </div>\n//                 )}\n//\n//                 {/* Dynamically show the form based on the state */}\n//                 {showForm === 'login' && <LoginForm onSubmit={handleLoginSubmit} setShowForm={setShowForm} />}\n//                 {showForm === 'register' && <RegisterForm onSubmit={handleRegisterSubmit} setShowForm={setShowForm} />}\n//                 {message && <h2>{message}</h2>}\n//                 {error && <h2>{error}</h2>}\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default BasePage;\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/styles.css'; // Import the CSS file\nimport NavBar from '../components/NavBar'; // Import the Header component\nimport axios from 'axios';\nimport ProductsPage from './ProductsPage'; // Import the ProductsPage component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onSubmit,\n  setShowForm\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"cta-button primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-form\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowForm('register'),\n          className: \"toggle-button\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginForm;\nconst RegisterForm = ({\n  onSubmit,\n  setShowForm\n}) => {\n  _s2();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n    onSubmit(email, password, name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Enter your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm-password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"name\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Enter your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"cta-button primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-form\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowForm('login'),\n          className: \"toggle-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 9\n  }, this);\n};\n_s2(RegisterForm, \"JklWYCnZvPUDh7zMTyKpL0EPaHg=\");\n_c2 = RegisterForm;\nconst BasePage = () => {\n  _s3();\n  const [showForm, setShowForm] = useState(null); // null, \"login\", or \"register\"\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if the user is authenticated (token is available)\n  useEffect(() => {\n    if (sessionStorage.getItem('token')) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const handleLoginSubmit = async (email, password) => {\n    console.log('Logging in with:', email, password);\n    try {\n      const response = await axios.post('http://localhost:3003/api/users/login', {\n        email: email,\n        password: password\n      });\n      if (response.status >= 300 || response.status < 200) {\n        setError(\"Login failed, try again.\");\n      } else {\n        sessionStorage.setItem('token', response.data.token);\n        setMessage(\"Logged in successfully.\");\n        setIsAuthenticated(true); // Set the authenticated state to true\n      }\n    } catch (error) {\n      setError(\"Login failed. Please try again.\");\n    }\n  };\n  const handleRegisterSubmit = async (email, password, name) => {\n    console.log('Registering with:', email, password);\n    try {\n      const response = await axios.post('http://localhost:3003/api/users/register', {\n        name: name,\n        email: email,\n        password: password\n      });\n      if (response.status >= 300 || response.status < 200) {\n        setError(\"Register failed, try again.\");\n      } else {\n        sessionStorage.setItem('token', response.data.token);\n        setMessage(\"Registered successfully.\");\n        setIsAuthenticated(true); // Set the authenticated state to true\n      }\n    } catch (error) {\n      setError(\"Registration failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(ProductsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-section\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"hero-heading\",\n            children: \"Welcome to My Products Manager Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 25\n        }, this), showForm === null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cta-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cta-button primary\",\n            onClick: () => setShowForm('login'),\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cta-button secondary\",\n            onClick: () => setShowForm('register'),\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 29\n        }, this), showForm === 'login' && /*#__PURE__*/_jsxDEV(LoginForm, {\n          onSubmit: handleLoginSubmit,\n          setShowForm: setShowForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 50\n        }, this), showForm === 'register' && /*#__PURE__*/_jsxDEV(RegisterForm, {\n          onSubmit: handleRegisterSubmit,\n          setShowForm: setShowForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 53\n        }, this), message && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 37\n        }, this), error && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 9\n  }, this);\n};\n_s3(BasePage, \"u7QJqCt5DyyV13ltEaCVFa+C7eY=\");\n_c3 = BasePage;\nexport default BasePage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"RegisterForm\");\n$RefreshReg$(_c3, \"BasePage\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","axios","ProductsPage","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","onSubmit","setShowForm","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","_c","RegisterForm","_s2","confirmPassword","setConfirmPassword","name","setName","alert","_c2","BasePage","_s3","showForm","message","setMessage","error","setError","isAuthenticated","setIsAuthenticated","sessionStorage","getItem","handleLoginSubmit","console","log","response","post","status","setItem","data","token","handleRegisterSubmit","_c3","$RefreshReg$"],"sources":["/home/avshalom/GitHub/Gigsberg/GigsbergFrontend/src/pages/BasePage.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n// import '../styles/styles.css'; // Import the CSS file\n// import NavBar from '../components/NavBar'; // Import the Header component\n// import axios from 'axios';\n//\n// const LoginForm = ({ onSubmit, setShowForm }) => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         onSubmit(email, password);\n//     };\n//\n//     return (\n//         <div className=\"form-container\">\n//             <h2>Login</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email</label>\n//                     <input\n//                         type=\"email\"\n//                         id=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         placeholder=\"Enter your email\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Password</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         placeholder=\"Enter your password\"\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\" className=\"cta-button primary\">Login</button>\n//             </form>\n//\n//             {/* Button to toggle to Register form */}\n//             <div className=\"toggle-form\">\n//                 <p>Don't have an account? <button onClick={() => setShowForm('register')} className=\"toggle-button\">Register</button></p>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// const RegisterForm = ({ onSubmit, setShowForm }) => {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [confirmPassword, setConfirmPassword] = useState('');\n//     const [name, setName] = useState('');\n//\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         if (password !== confirmPassword) {\n//             alert(\"Passwords do not match!\");\n//             return;\n//         }\n//         onSubmit(email, password, name);\n//     };\n//\n//     return (\n//         <div className=\"form-container\">\n//             <h2>Register</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"email\">Email</label>\n//                     <input\n//                         type=\"email\"\n//                         id=\"email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         placeholder=\"Enter your email\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Password</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         placeholder=\"Enter your password\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"confirm-password\">Confirm Password</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"confirm-password\"\n//                         value={confirmPassword}\n//                         onChange={(e) => setConfirmPassword(e.target.value)}\n//                         placeholder=\"Confirm your password\"\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"name\">Name</label>\n//                     <input\n//                         type=\"name\"\n//                         id=\"name\"\n//                         value={name}\n//                         onChange={(e) => setName(e.target.value)}\n//                         placeholder=\"Enter your name\"\n//                         required\n//                     />\n//                 </div>\n//                 <button type=\"submit\" className=\"cta-button primary\">Register</button>\n//             </form>\n//\n//             {/* Button to toggle to Login form */}\n//             <div className=\"toggle-form\">\n//                 <p>Already have an account? <button onClick={() => setShowForm('login')}\n//                                                     className=\"toggle-button\">Login</button></p>\n//             </div>\n//         </div>\n//     );\n// };\n//\n// const BasePage = () => {\n//     const [showForm, setShowForm] = useState(null); // null, \"login\", or \"register\"\n//     const [message, setMessage] = useState('');\n//     const [error, setError] = useState('');\n//\n//     const handleLoginSubmit = async (email, password) => {\n//         console.log('Logging in with:', email, password);\n//         try {\n//             const response = await axios.post('http://localhost:3003/api/users/login', {\n//                 email: email,\n//                 password: password\n//             });\n//\n//             if (response.status >= 300 || response.status < 200) {\n//                 setError(\"Login failed, try again.\");\n//             } else {\n//                 sessionStorage.setItem('token', response.data.token);\n//                 setMessage(\"Logged in successfully.\");\n//             }\n//         } catch (error) {\n//             setError(error);\n//         }\n//\n//     };\n//\n//     const handleRegisterSubmit = async (email, password, name) => {\n//         console.log('Registering with:', email, password);\n//         try {\n//             const response = await axios.post('http://localhost:3003/api/users/register', {\n//                 name: name,\n//                 email: email,\n//                 password: password\n//             });\n//\n//             if (response.status >= 300 || response.status < 200) {\n//                 setError(\"Register failed, try again.\");\n//             } else {\n//                 sessionStorage.setItem('token', response.data.token);\n//                 setMessage(\"Registered successfully.\");\n//             }\n//         } catch(error) {\n//             setError(error);\n//         }\n//     };\n//\n//     return (\n//         <div>\n//             <NavBar></NavBar>\n//             <div className=\"container\">\n//                 {/*<NavBar/>*/}\n//                 <div className=\"hero-section\">\n//                     <h1 className=\"hero-heading\">Welcome to My Products Manager Project</h1>\n//                 </div>\n//\n//                 {/* Call-to-Action Buttons */}\n//                 {showForm === null && (\n//                     <div className=\"cta-buttons\">\n//                         <button\n//                             className=\"cta-button primary\"\n//                             onClick={() => setShowForm('login')}\n//                         >\n//                             Login\n//                         </button>\n//                         <button\n//                             className=\"cta-button secondary\"\n//                             onClick={() => setShowForm('register')}\n//                         >\n//                             Register\n//                         </button>\n//                     </div>\n//                 )}\n//\n//                 {/* Dynamically show the form based on the state */}\n//                 {showForm === 'login' && <LoginForm onSubmit={handleLoginSubmit} setShowForm={setShowForm} />}\n//                 {showForm === 'register' && <RegisterForm onSubmit={handleRegisterSubmit} setShowForm={setShowForm} />}\n//                 {message && <h2>{message}</h2>}\n//                 {error && <h2>{error}</h2>}\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default BasePage;\n\nimport React, { useState, useEffect } from 'react';\nimport '../styles/styles.css'; // Import the CSS file\nimport NavBar from '../components/NavBar'; // Import the Header component\nimport axios from 'axios';\nimport ProductsPage from './ProductsPage'; // Import the ProductsPage component\n\nconst LoginForm = ({ onSubmit, setShowForm }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(email, password);\n    };\n\n    return (\n        <div className=\"form-container\">\n            <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"Enter your email\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Enter your password\"\n                        required\n                    />\n                </div>\n                <button type=\"submit\" className=\"cta-button primary\">Login</button>\n            </form>\n\n            {/* Button to toggle to Register form */}\n            <div className=\"toggle-form\">\n                <p>Don't have an account? <button onClick={() => setShowForm('register')} className=\"toggle-button\">Register</button></p>\n            </div>\n        </div>\n    );\n};\n\nconst RegisterForm = ({ onSubmit, setShowForm }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [name, setName] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match!\");\n            return;\n        }\n        onSubmit(email, password, name);\n    };\n\n    return (\n        <div className=\"form-container\">\n            <h2>Register</h2>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        placeholder=\"Enter your email\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"Enter your password\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"confirm-password\">Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"confirm-password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        placeholder=\"Confirm your password\"\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        type=\"name\"\n                        id=\"name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        placeholder=\"Enter your name\"\n                        required\n                    />\n                </div>\n                <button type=\"submit\" className=\"cta-button primary\">Register</button>\n            </form>\n\n            {/* Button to toggle to Login form */}\n            <div className=\"toggle-form\">\n                <p>Already have an account? <button onClick={() => setShowForm('login')} className=\"toggle-button\">Login</button></p>\n            </div>\n        </div>\n    );\n};\n\nconst BasePage = () => {\n    const [showForm, setShowForm] = useState(null); // null, \"login\", or \"register\"\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // Check if the user is authenticated (token is available)\n    useEffect(() => {\n        if (sessionStorage.getItem('token')) {\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    const handleLoginSubmit = async (email, password) => {\n        console.log('Logging in with:', email, password);\n        try {\n            const response = await axios.post('http://localhost:3003/api/users/login', {\n                email: email,\n                password: password\n            });\n\n            if (response.status >= 300 || response.status < 200) {\n                setError(\"Login failed, try again.\");\n            } else {\n                sessionStorage.setItem('token', response.data.token);\n                setMessage(\"Logged in successfully.\");\n                setIsAuthenticated(true); // Set the authenticated state to true\n            }\n        } catch (error) {\n            setError(\"Login failed. Please try again.\");\n        }\n    };\n\n    const handleRegisterSubmit = async (email, password, name) => {\n        console.log('Registering with:', email, password);\n        try {\n            const response = await axios.post('http://localhost:3003/api/users/register', {\n                name: name,\n                email: email,\n                password: password\n            });\n\n            if (response.status >= 300 || response.status < 200) {\n                setError(\"Register failed, try again.\");\n            } else {\n                sessionStorage.setItem('token', response.data.token);\n                setMessage(\"Registered successfully.\");\n                setIsAuthenticated(true); // Set the authenticated state to true\n            }\n        } catch (error) {\n            setError(\"Registration failed. Please try again.\");\n        }\n    };\n\n    return (\n        <div>\n            <NavBar />\n            <div className=\"container\">\n                {/* Show the ProductsPage if authenticated */}\n                {isAuthenticated ? (\n                    <ProductsPage />\n                ) : (\n                    <>\n                        <div className=\"hero-section\">\n                            <h1 className=\"hero-heading\">Welcome to My Products Manager Project</h1>\n                        </div>\n\n                        {/* Call-to-Action Buttons */}\n                        {showForm === null && (\n                            <div className=\"cta-buttons\">\n                                <button\n                                    className=\"cta-button primary\"\n                                    onClick={() => setShowForm('login')}\n                                >\n                                    Login\n                                </button>\n                                <button\n                                    className=\"cta-button secondary\"\n                                    onClick={() => setShowForm('register')}\n                                >\n                                    Register\n                                </button>\n                            </div>\n                        )}\n\n                        {/* Dynamically show the form based on the state */}\n                        {showForm === 'login' && <LoginForm onSubmit={handleLoginSubmit} setShowForm={setShowForm} />}\n                        {showForm === 'register' && <RegisterForm onSubmit={handleRegisterSubmit} setShowForm={setShowForm} />}\n                        {message && <h2>{message}</h2>}\n                        {error && <h2>{error}</h2>}\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BasePage;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}